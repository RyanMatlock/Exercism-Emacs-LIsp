#+title: Gigasecond

* First attempt

#+begin_src emacs-lisp
  (defun from (second minute hour day month year)
    "Add 10^9 seconds to the timestamp specified by SECOND, MINUTE, HOUR, DAY,
  MONTH, and YEAR."
    (let* ((t-init (make-decoded-time
                    :second second
                    :minute minute
                    :hour hour
                    :day day
                    :month month
                    :year year))
           (giga (expt 10 9))
           (gigasecond (make-decoded-time :second giga)))
      ;; this doesn't do anything helpful
      ;; (print (format (concat "t-init: %s\n"
      ;;                        "gigasecond: %s")
      ;;                t-init
      ;;                gigasecond))
      (decoded-time-add t-init gigasecond)))
#+end_src

#+begin_example
  FFFFF

  F from-19590719T123030Z
      (ert-test-failed
       ((should
         (equal
          '(10 17 14 27 3 1991)
          (from 30 30 12 19 7 1959)))
        :form
        (equal
         (10 17 14 27 3 1991)
         (10 17 14 27 3 1991 nil nil nil))
        :value nil :explanation
        (proper-lists-of-different-length 6 9
                                          (10 17 14 27 3 1991)
                                          (10 17 14 27 3 1991 nil nil nil)
                                          first-mismatch-at 6)))

  F from-19770613T235959Z
      (ert-test-failed
       ((should
         (equal
          '(39 46 1 20 2 2009)
          (from 59 59 23 13 6 1977)))
        :form
        (equal
         (39 46 1 20 2 2009)
         (39 46 1 20 2 2009 nil nil nil))
        :value nil :explanation
        (proper-lists-of-different-length 6 9
                                          (39 46 1 20 2 2009)
                                          (39 46 1 20 2 2009 nil nil nil)
                                          first-mismatch-at 6)))

  F from-20110425T120000Z
      (ert-test-failed
       ((should
         (equal
          '(40 46 13 1 1 2043)
          (from 0 0 12 25 4 2011)))
        :form
        (equal
         (40 46 13 1 1 2043)
         (40 46 13 1 1 2043 nil nil nil))
        :value nil :explanation
        (proper-lists-of-different-length 6 9
                                          (40 46 13 1 1 2043)
                                          (40 46 13 1 1 2043 nil nil nil)
                                          first-mismatch-at 6)))

  F from-lisp-epoch
      (ert-test-failed
       ((should
         (equal
          '(40 46 1 10 9 1931)
          (from 0 0 0 1 1 1900)))
        :form
        (equal
         (40 46 1 10 9 1931)
         (40 46 1 10 9 1931 nil nil nil))
        :value nil :explanation
        (proper-lists-of-different-length 6 9
                                          (40 46 1 10 9 1931)
                                          (40 46 1 10 9 1931 nil nil nil)
                                          first-mismatch-at 6)))

  F from-unix-epoch
      (ert-test-failed
       ((should
         (equal
          '(40 46 1 9 9 2001)
          (from 0 0 0 1 1 1970)))
        :form
        (equal
         (40 46 1 9 9 2001)
         (40 46 1 9 9 2001 nil nil nil))
        :value nil :explanation
        (proper-lists-of-different-length 6 9
                                          (40 46 1 9 9 2001)
                                          (40 46 1 9 9 2001 nil nil nil)
                                          first-mismatch-at 6)))
#+end_example

This is probably not the *right* way to do it, but it passes all the tests:

#+begin_src emacs-lisp
  (defun from (second minute hour day month year)
    "Add 10^9 seconds to the timestamp specified by SECOND, MINUTE, HOUR, DAY,
  MONTH, and YEAR."
    (let* ((t-init (make-decoded-time
                    :second second
                    :minute minute
                    :hour hour
                    :day day
                    :month month
                    :year year))
           (giga (expt 10 9))
           (gigasecond (make-decoded-time :second giga)))
      (take 6 (decoded-time-add t-init gigasecond))))
#+end_src

Slightly less magic number-y:

#+begin_src emacs-lisp
  (defun from (second minute hour day month year)
    "Add 10^9 seconds to the timestamp specified by SECOND, MINUTE, HOUR, DAY,
  MONTH, and YEAR."
    (let* ((args (list second minute hour day month year))
           (t-init (make-decoded-time
                    :second second
                    :minute minute
                    :hour hour
                    :day day
                    :month month
                    :year year))
           (giga (expt 10 9))
           (gigasecond (make-decoded-time :second giga)))
      (take (length args) (decoded-time-add t-init gigasecond))))
#+end_src
